#!/usr/bin/env bash
# (placeholder)
#!/usr/bin/env bash
set -euo pipefail

if [[ $# -ne 3 ]]; then
	echo "usage: $0 <v4|v6> <set_name> <ip>" >&2
	exit 2
fi

fam="$1"; setname="$2"; ip="$3"
TABLE="zoplog"

# Load firewall rule timeout from centralized config
FIREWALL_TIMEOUT=""
if [[ -f "/etc/zoplog/zoplog.conf" ]]; then
  FIREWALL_TIMEOUT=$(grep "^firewall_rule_timeout" /etc/zoplog/zoplog.conf 2>/dev/null | cut -d'=' -f2 | xargs || echo "")
fi

# Ensure timeout is at least 1 second (default to 10800 seconds = 3 hours if not configured or invalid)
if [[ -z "$FIREWALL_TIMEOUT" || "$FIREWALL_TIMEOUT" -lt 1 ]]; then
  FIREWALL_TIMEOUT="10800"
fi
FIREWALL_TIMEOUT="timeout ${FIREWALL_TIMEOUT}s"

if [[ "$fam" != "v4" && "$fam" != "v6" ]]; then
	echo "family must be v4 or v6" >&2
	exit 2
fi

nft list table inet "$TABLE" >/dev/null 2>&1 || nft add table inet "$TABLE"
if [[ "$fam" == "v4" ]]; then
	nft list set inet "$TABLE" "$setname" >/dev/null 2>&1 || nft add set inet "$TABLE" "$setname" "{ type ipv4_addr; flags interval; $FIREWALL_TIMEOUT }"
	nft add element inet "$TABLE" "$setname" { "$ip" } 2>/dev/null || true
else
	nft list set inet "$TABLE" "$setname" >/dev/null 2>&1 || nft add set inet "$TABLE" "$setname" "{ type ipv6_addr; flags interval; $FIREWALL_TIMEOUT }"
	nft add element inet "$TABLE" "$setname" { "$ip" } 2>/dev/null || true
fi
