#!/usr/bin/env bash
set -euo pipefail

if [[ $# -ne 2 ]]; then
  echo "usage: $0 <blocklist_id> <active|inactive>" >&2
  exit 2
fi

id="$1"
state="$2"

if ! [[ "$id" =~ ^[0-9]+$ ]]; then
  echo "invalid id: $id" >&2
  exit 2
fi

if [[ "$state" != "active" && "$state" != "inactive" ]]; then
  echo "invalid state: $state" >&2
  exit 2
fi

TABLE="zoplog"
SET_V4="zoplog-blocklist-${id}-v4"
SET_V6="zoplog-blocklist-${id}-v6"

ensure_base() {
  nft list table inet "$TABLE" >/dev/null 2>&1 || nft add table inet "$TABLE"
  nft list chain inet "$TABLE" input   >/dev/null 2>&1 || nft add chain inet "$TABLE" input   '{ type filter hook input   priority 0; policy accept; }'
  nft list chain inet "$TABLE" output  >/dev/null 2>&1 || nft add chain inet "$TABLE" output  '{ type filter hook output  priority 0; policy accept; }'
  nft list chain inet "$TABLE" forward >/dev/null 2>&1 || nft add chain inet "$TABLE" forward '{ type filter hook forward priority 0; policy accept; }'
}

has_rule() {
  local chain="$1"; local comment="$2"
  nft list chain inet "$TABLE" "$chain" 2>/dev/null | grep -Fq "comment \"$comment\""
}

add_rule_if_missing() {
  local chain="$1"; shift
  local comment="$1"; shift
  if ! has_rule "$chain" "$comment"; then
    nft add rule inet "$TABLE" "$chain" "$@" comment "$comment"
  fi
}

delete_rule_by_comment() {
  local chain="$1"; local comment="$2"
  local handle
  handle=$(nft -a list chain inet "$TABLE" "$chain" 2>/dev/null | awk -v c="comment \"$comment\"" '$0 ~ c { for(i=1;i<=NF;i++){ if($i=="handle"){ print $(i+1); exit } } }')
  if [[ -n "${handle:-}" ]]; then
    nft delete rule inet "$TABLE" "$chain" handle "$handle" || true
  fi
}

if [[ "$state" == "active" ]]; then
  ensure_base
  nft list set inet "$TABLE" "$SET_V4" >/dev/null 2>&1 || nft add set inet "$TABLE" "$SET_V4" '{ type ipv4_addr; flags interval; }'
  nft list set inet "$TABLE" "$SET_V6" >/dev/null 2>&1 || nft add set inet "$TABLE" "$SET_V6" '{ type ipv6_addr; flags interval; }'

  add_rule_if_missing input  "zoplog-bl-${id}-input-v4-log"  ip  saddr @"$SET_V4" log prefix "ZOPLOG-BLOCKLIST-IN " level warn
  add_rule_if_missing input  "zoplog-bl-${id}-input-v4-drop" ip  saddr @"$SET_V4" drop
  add_rule_if_missing input  "zoplog-bl-${id}-input-v6-log"  ip6 saddr @"$SET_V6" log prefix "ZOPLOG-BLOCKLIST-IN " level warn
  add_rule_if_missing input  "zoplog-bl-${id}-input-v6-drop" ip6 saddr @"$SET_V6" drop

  add_rule_if_missing output "zoplog-bl-${id}-output-v4-log"  ip  daddr @"$SET_V4" log prefix "ZOPLOG-BLOCKLIST-OUT " level warn
  add_rule_if_missing output "zoplog-bl-${id}-output-v4-drop" ip  daddr @"$SET_V4" drop
  add_rule_if_missing output "zoplog-bl-${id}-output-v6-log"  ip6 daddr @"$SET_V6" log prefix "ZOPLOG-BLOCKLIST-OUT " level warn
  add_rule_if_missing output "zoplog-bl-${id}-output-v6-drop" ip6 daddr @"$SET_V6" drop
  # FORWARD (bridged/routed)
  add_rule_if_missing forward "zoplog-bl-${id}-forward-v4-saddr-log"  ip  saddr @"$SET_V4" log prefix "ZOPLOG-BLOCKLIST-FWD " level warn
  add_rule_if_missing forward "zoplog-bl-${id}-forward-v4-saddr-drop" ip  saddr @"$SET_V4" drop
  add_rule_if_missing forward "zoplog-bl-${id}-forward-v4-daddr-log"  ip  daddr @"$SET_V4" log prefix "ZOPLOG-BLOCKLIST-FWD " level warn
  add_rule_if_missing forward "zoplog-bl-${id}-forward-v4-daddr-drop" ip  daddr @"$SET_V4" drop
  add_rule_if_missing forward "zoplog-bl-${id}-forward-v6-saddr-log"  ip6 saddr @"$SET_V6" log prefix "ZOPLOG-BLOCKLIST-FWD " level warn
  add_rule_if_missing forward "zoplog-bl-${id}-forward-v6-saddr-drop" ip6 saddr @"$SET_V6" drop
  add_rule_if_missing forward "zoplog-bl-${id}-forward-v6-daddr-log"  ip6 daddr @"$SET_V6" log prefix "ZOPLOG-BLOCKLIST-FWD " level warn
  add_rule_if_missing forward "zoplog-bl-${id}-forward-v6-daddr-drop" ip6 daddr @"$SET_V6" drop
else
  delete_rule_by_comment input  "zoplog-bl-${id}-input-v4-log"
  delete_rule_by_comment input  "zoplog-bl-${id}-input-v4-drop"
  delete_rule_by_comment input  "zoplog-bl-${id}-input-v6-log"
  delete_rule_by_comment input  "zoplog-bl-${id}-input-v6-drop"
  delete_rule_by_comment output "zoplog-bl-${id}-output-v4-log"
  delete_rule_by_comment output "zoplog-bl-${id}-output-v4-drop"
  delete_rule_by_comment output "zoplog-bl-${id}-output-v6-log"
  delete_rule_by_comment output "zoplog-bl-${id}-output-v6-drop"
  # forward deletions
  delete_rule_by_comment forward "zoplog-bl-${id}-forward-v4-saddr-log"
  delete_rule_by_comment forward "zoplog-bl-${id}-forward-v4-saddr-drop"
  delete_rule_by_comment forward "zoplog-bl-${id}-forward-v4-daddr-log"
  delete_rule_by_comment forward "zoplog-bl-${id}-forward-v4-daddr-drop"
  delete_rule_by_comment forward "zoplog-bl-${id}-forward-v6-saddr-log"
  delete_rule_by_comment forward "zoplog-bl-${id}-forward-v6-saddr-drop"
  delete_rule_by_comment forward "zoplog-bl-${id}-forward-v6-daddr-log"
  delete_rule_by_comment forward "zoplog-bl-${id}-forward-v6-daddr-drop"
fi

# Auto-save rules after toggling
"$(dirname "$0")/zoplog-nft-autosave" post-toggle >/dev/null 2>&1 || true
