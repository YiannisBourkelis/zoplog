#!/bin/bash

# NetworkManager dispatcher script to ensure DHCP-provided DNS/Gateway are used
# on eth0 or br-zoplog when links go up or change. Avoid hard-coded DNS.

INTERFACE="$1"
STATUS="$2"

# Only act on br-zoplog or the current default-route device (predictable names like enpXsY)
if [ "$INTERFACE" != "br-zoplog" ]; then
    DEF_IF=$(ip route show default 2>/dev/null | awk '/default/ {print $5; exit}')
    if [ -z "$DEF_IF" ] || [ "$INTERFACE" != "$DEF_IF" ]; then
        exit 0
    fi
fi

# React on common events
case "$STATUS" in
    up|dhcp4-change|connectivity-change) ;;
    *) exit 0 ;;
esac

# Find the active connection name for this device
CONN_NAME=$(nmcli -t -f NAME,DEVICE connection show --active | awk -F: -v d="$INTERFACE" '$2==d{print $1; exit}')
if [ -z "$CONN_NAME" ]; then
    logger "zoplog-dispatcher: no active NM connection for $INTERFACE"
    exit 0
fi

# Ensure IPv4 DHCP is used and auto DNS is honored
nmcli connection modify "$CONN_NAME" \
    ipv4.method auto \
    ipv4.never-default no \
    ipv4.ignore-auto-dns no \
    ipv4.dns "" \
    ipv6.method auto \
    ipv6.ignore-auto-dns no \
    ipv6.never-default no \
    ipv6.dns ""

# Reapply to pick up any changes without flapping the link
nmcli device reapply "$INTERFACE" || nmcli connection up "$CONN_NAME"

# Log current default route and DNS servers for troubleshooting
GW=$(ip route show default | awk '/default/ {print $3, $5}' | head -n1)
DNS=$(nmcli -t -f IP4.DNS,IP6.DNS connection show "$CONN_NAME" 2>/dev/null | tr '\n' ' ')
logger "zoplog-dispatcher: $INTERFACE ($CONN_NAME) applied DHCP DNS/GW; default=$GW dns=[$DNS]"
